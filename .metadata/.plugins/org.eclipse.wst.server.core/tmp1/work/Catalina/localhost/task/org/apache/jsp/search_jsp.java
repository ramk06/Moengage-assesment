/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-11-22 09:30:35 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Search Page</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            background-color: #f4f4f4;\r\n");
      out.write("        }\r\n");
      out.write("        .header {\r\n");
      out.write("            background-color: #007bff;\r\n");
      out.write("            color: white;\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .header h1 {\r\n");
      out.write("            margin: 0;\r\n");
      out.write("        }\r\n");
      out.write("        .header .welcome {\r\n");
      out.write("            margin-left: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .logout button {\r\n");
      out.write("            padding: 8px 12px;\r\n");
      out.write("            background-color: #dc3545;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 14px;\r\n");
      out.write("        }\r\n");
      out.write("        .logout button:hover {\r\n");
      out.write("            background-color: #c82333;\r\n");
      out.write("        }\r\n");
      out.write("        .container {\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            margin: 0 auto;\r\n");
      out.write("            width: 80%;\r\n");
      out.write("            max-width: 900px;\r\n");
      out.write("            background: white;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n");
      out.write("        }\r\n");
      out.write("        h2 {\r\n");
      out.write("            text-align: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-form {\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-form input {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            width: 70%;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-form button {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #28a745;\r\n");
      out.write("            color: white;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("        }\r\n");
      out.write("        .filter-form button:hover {\r\n");
      out.write("            background-color: #218838;\r\n");
      out.write("        }\r\n");
      out.write("        .images-container {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            flex-wrap: wrap;\r\n");
      out.write("            gap: 10px;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("        }\r\n");
      out.write("        .images-container img {\r\n");
      out.write("            width: 150px;\r\n");
      out.write("            height: 150px;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            border: 1px solid #ccc;\r\n");
      out.write("        }\r\n");
      out.write("        .message {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #d4edda;\r\n");
      out.write("            color: #155724;\r\n");
      out.write("            border: 1px solid #c3e6cb;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .error-message {\r\n");
      out.write("            padding: 10px;\r\n");
      out.write("            background-color: #f8d7da;\r\n");
      out.write("            color: #721c24;\r\n");
      out.write("            border: 1px solid #f5c6cb;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .view-lists-button {\r\n");
      out.write("            padding: 10px 20px;\r\n");
      out.write("            background-color: #ffc107;\r\n");
      out.write("            color: black;\r\n");
      out.write("            border: none;\r\n");
      out.write("            border-radius: 5px;\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 16px;\r\n");
      out.write("            display: block;\r\n");
      out.write("            margin: 20px auto;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .view-lists-button:hover {\r\n");
      out.write("            background-color: #e0a800;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    <script>\r\n");
      out.write("        // Validate search form\r\n");
      out.write("        function validateSearchForm() {\r\n");
      out.write("            const filterInput = document.querySelector('input[name=\"filter\"]');\r\n");
      out.write("            if (!filterInput.value.trim()) {\r\n");
      out.write("                alert('Please enter a valid response code.');\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("            return true;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        // Logout function\r\n");
      out.write("        function logout() {\r\n");
      out.write("            window.location.href = \"logout\";\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <div class=\"header\">\r\n");
      out.write("        <h1>MoEngage Assignment </h1>\r\n");
      out.write("        <div class=\"welcome\">\r\n");
      out.write("            Welcome, ");
      out.print( session.getAttribute("username") != null ? session.getAttribute("username") : "Guest" );
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"logout\">\r\n");
      out.write("            <button onclick=\"logout()\">Logout</button>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <!-- Success/Error Messages -->\r\n");
      out.write("        ");
 if (request.getParameter("error") != null) { 
      out.write("\r\n");
      out.write("            <div class=\"error-message\">\r\n");
      out.write("                ");
 if ("invalid".equals(request.getParameter("error"))) { 
      out.write("\r\n");
      out.write("                    Invalid input! Please try again.\r\n");
      out.write("                ");
 } else { 
      out.write("\r\n");
      out.write("                    An error occurred. Please try again.\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } else if (request.getParameter("success") != null) { 
      out.write("\r\n");
      out.write("            <div class=\"message\">\r\n");
      out.write("                Item added successfully to the list!\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <h2>Search by Response Code</h2>\r\n");
      out.write("        <form action=\"search\" method=\"get\" class=\"filter-form\" onsubmit=\"return validateSearchForm();\">\r\n");
      out.write("            <input type=\"text\" name=\"filter\" placeholder=\"Enter code (e.g., 2xx, 200)\" required>\r\n");
      out.write("            <button type=\"submit\">Search</button>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <!-- View All Lists Button -->\r\n");
      out.write("        <form action=\"lists\" method=\"get\">\r\n");
      out.write("            <button type=\"submit\" class=\"view-lists-button\">View All Lists</button>\r\n");
      out.write("        </form>\r\n");
      out.write("\r\n");
      out.write("        <!-- Display Images -->\r\n");
      out.write("        <div class=\"images-container\">\r\n");
      out.write("            ");
 
            java.util.List<String> images = (java.util.List<String>) request.getAttribute("images");
            if (images != null && !images.isEmpty()) {
                for (String imgUrl : images) {
            
      out.write("\r\n");
      out.write("                <img src=\"");
      out.print( imgUrl );
      out.write("\" alt=\"Response Code Image\">\r\n");
      out.write("            ");
 
                }
            } else if (request.getParameter("filter") != null) { 
            
      out.write("\r\n");
      out.write("                <p>No images found for the given filter.</p>\r\n");
      out.write("            ");
 } 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Save List Button -->\r\n");
      out.write("        <form action=\"saveList\" method=\"post\">\r\n");
      out.write("            <input type=\"hidden\" name=\"filter\" value=\"");
      out.print( request.getParameter("filter") );
      out.write("\">\r\n");
      out.write("            <button type=\"submit\" class=\"save-button\">Save List</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
