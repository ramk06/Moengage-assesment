package com.servlet;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.Persistence;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import com.entity.List;
import java.io.IOException;
import java.util.Date;

@WebServlet("/saveList")
public class SaveListServlet extends HttpServlet {
    private static final long serialVersionUID = 1L;

    @Override
    protected void service(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
        // Retrieve username from session and filter from request
        String username = (String) request.getSession().getAttribute("username");
        String filter = request.getParameter("filter");

        // Validate session and input
        if (username == null || filter == null || filter.trim().isEmpty()) {
            response.sendRedirect("search.jsp?error=invalid");
            return;
        }

        EntityManagerFactory factory = null;
        EntityManager manager = null;
        EntityTransaction transaction = null;

        try {
            // Initialize JPA EntityManager and begin transaction
            factory = Persistence.createEntityManagerFactory("E1");
            manager = factory.createEntityManager();
            transaction = manager.getTransaction();
            transaction.begin();

            // Create a new list entity and persist it
            List list = new List();
            list.setName(filter.trim()); // Trim whitespace for clean input
            list.setCreationDate(new Date());
            list.setUsername(username);

            manager.persist(list);

            // Commit transaction and redirect with success message
            transaction.commit();
            response.sendRedirect("search.jsp?success=added");
        } catch (Exception e) {
            // Rollback transaction in case of an exception
            if (transaction != null && transaction.isActive()) {
                transaction.rollback();
            }
            e.printStackTrace();
            response.sendRedirect("search.jsp?error=exception");
        } finally {
            // Clean up EntityManager and EntityManagerFactory
            if (manager != null) manager.close();
            if (factory != null) factory.close();
        }
    }
}
